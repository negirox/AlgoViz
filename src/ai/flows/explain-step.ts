// This file is generated by Firebase Genkit.
'use server';

/**
 * @fileOverview A flow to explain a step in an algorithm.
 *
 * - explainStep - A function that handles the step explanation process.
 * - ExplainStepInput - The input type for the explainStep function.
 * - ExplainStepOutput - The return type for the explainStep function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const ExplainStepInputSchema = z.object({
  code: z.string().describe('The code of the algorithm.'),
  step: z.string().describe('The current step of the algorithm.'),
  variables: z.string().describe('The current state of the variables.'),
});
export type ExplainStepInput = z.infer<typeof ExplainStepInputSchema>;

const ExplainStepOutputSchema = z.object({
  explanation: z.string().describe('A short explanation of the current step.'),
});
export type ExplainStepOutput = z.infer<typeof ExplainStepOutputSchema>;

export async function explainStep(input: ExplainStepInput): Promise<ExplainStepOutput> {
  return explainStepFlow(input);
}

const prompt = ai.definePrompt({
  name: 'explainStepPrompt',
  input: {schema: ExplainStepInputSchema},
  output: {schema: ExplainStepOutputSchema},
  prompt: `You are an expert algorithm explainer. You are able to explain complex algorithms in simple terms.

  Here is the code of the algorithm:
  {{code}}

  Here is the current step of the algorithm:
  {{step}}

  Here are the current variables:
  {{variables}}

  Please provide a short, one-sentence explanation of what is happening in this step. Focus on what the current step does with the variables.
  `,
});

const explainStepFlow = ai.defineFlow(
  {
    name: 'explainStepFlow',
    inputSchema: ExplainStepInputSchema,
    outputSchema: ExplainStepOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
