// This file is generated by Firebase Genkit.
'use server';

/**
 * @fileOverview A flow to generate an execution trace for an algorithm.
 *
 * - generateTrace - A function that handles the trace generation process.
 * - GenerateTraceInput - The input type for the generateTrace function.
 * - GenerateTraceOutput - The return type for the generateTrace function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateTraceInputSchema = z.object({
  code: z.string().describe('The JavaScript code of the sorting algorithm.'),
  inputArray: z
    .string()
    .describe('A JSON string representation of the array to sort.'),
});
export type GenerateTraceInput = z.infer<typeof GenerateTraceInputSchema>;

const TraceStepSchema = z.object({
  line: z.number().describe('The line number being executed.'),
  variables: z
    .record(z.any())
    .describe('A map of variable names to their values at this step.'),
});

const GenerateTraceOutputSchema = z.object({
  trace: z
    .array(TraceStepSchema)
    .describe('The step-by-step execution trace of the algorithm.'),
});
export type GenerateTraceOutput = z.infer<typeof GenerateTraceOutputSchema>;

export async function generateTrace(
  input: GenerateTraceInput
): Promise<GenerateTraceOutput> {
  return generateTraceFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateTracePrompt',
  input: {schema: GenerateTraceInputSchema},
  output: {schema: GenerateTraceOutputSchema},
  prompt: `You are an expert JavaScript runtime analyzer. Your task is to analyze the provided sorting algorithm and generate a step-by-step execution trace.

The user will provide a JavaScript function that takes an array of numbers as input and sorts it.

Your output must be a JSON object containing a 'trace' array. Each element in the 'trace' array represents a single execution step and must include:
1.  'line': The line number in the code that is currently being executed.
2.  'variables': An object representing the state of all variables (including loop counters and the array itself) at that exact moment.

Here is the sorting algorithm code:
\`\`\`javascript
{{code}}
\`\`\`

Here is the input array:
\`\`\`
{{inputArray}}
\`\`\`

Please generate the complete execution trace. Start from the first line of the function and trace every single step until the function returns. Capture the state of all variables at each step.
`,
});

const generateTraceFlow = ai.defineFlow(
  {
    name: 'generateTraceFlow',
    inputSchema: GenerateTraceInputSchema,
    outputSchema: GenerateTraceOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
